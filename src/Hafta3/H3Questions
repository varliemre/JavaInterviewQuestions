Q1- Extract a Word From a Sentence

   Implement a method removeWord() that takes two string parameters:

   sentence - the sentence you are to remove a word from.
   word - the word you are to remove from the sentence.
   Your method should take a string, sentence and remove word from it. It will return a new string without word in the sentence.

   Examples
   removeWord("One two three four", "two") ➞ "One three four"

   removeWord("Bob has a kid", "kid") ➞ "Bob has a"
   Notes
   Use the Resources section if you need help.
-----------------------------------------------------------------------------------------------------
Q2- Digits Battle!

    Starting from the left side of an integer, adjacent digits pair up in "battle" and the larger digit wins. If two digits are the same,
    they both lose. A lone digit automatically wins.

    Create a function that returns the victorious digits.

    To illustrate:

    battleOutcome(578921445) ➞ 7925
    // [57]: 7 wins; [89] 9 wins; [21] 2 wins;
    // [44] neither wins; 5 (automatically) wins
    Examples
    battleOutcome(32531) ➞ 351
    // 3 deffeats 2, 5 defeats 3, 1 is a single.

    battleOutcome(111) ➞ 1
    // 1 and 1 tie, so neither move on, last 1 is a single.

    battleOutcome(78925) ➞ 895

    Notes:
    There are no winners in a battle with equal digits (neither should be printed).
    If the length of the number is odd, the lone digit should be printed at the end of the number.
-----------------------------------------------------------------------------------------------------
Q3- Unique Character Mapping

    Write a function that returns a character mapping from a word.

    Examples
    characterMapping("abcd") ➞ [0, 1, 2, 3]

    characterMapping("abb") ➞ [0, 1, 1]

    characterMapping("babbcb") ➞ [0, 1, 0, 0, 2, 0]

    characterMapping("hmmmmm") ➞ [0, 1, 1, 1, 1, 1]

    Notlar
    Sayacınıza 0'dan başlayın ve her yeni karakterle karşılaştığınızda 1 artırın.
    Aynı karakterler aynı sayıyı paylaşmalıdır.

----------------------------------------------------------------------------------------------------